#textdomain wesnoth-Rise_of_the_Elementalist

#define FLOOD_TERRAIN MATCH NEW_TERRAIN
    [store_locations]
        {MATCH}
        variable=tmp_locs
    [/store_locations]
    {FOREACH tmp_locs i}
        [terrain]
            x,y=$tmp_locs[$i].x,$tmp_locs[$i].y
            terrain={NEW_TERRAIN}
        [/terrain]
    {NEXT i}
#enddef

#define CLEAR_RUBBLE
    [remove_unit_overlay]
        x,y=$x1,$y1
        image="misc/carry-rubble.png"
    [/remove_unit_overlay]
    {CLEAR_VARIABLE unit.variables.has_rock}
    [unstore_unit]
        variable=unit
    [/unstore_unit]
#enddef

[scenario]
    id="14_Flood"
    name= _ "Flood"
    map_data="{~add-ons/Rise_of_the_Elementalist/maps3/Flood.map}"
    turns=70
    next_scenario=15_Assault
    victory_when_enemies_defeated=no
    {UNDERGROUND}
    {DEFAULT_MUSIC_PLAYLIST}

    [story]
        [part]
            story=_ "They journeyed to the south, where Celestia said she could feel Kil'rathacar's presence. They found a cave entrance where mountain streams were flowing swiftly to the depths as the winter snows began to melt. Reana was growing more confident as it seemed that Celestia, with the jewel, may just be able to take on Kil'rathacar."
        [/part]
    [/story]

    [side]
        side=1
        team_name=Allies
        user_team_name=_ "Celestia"
        gold=160
        controller=human
        {CELESTIA_MACRO}
        type=Ice Goddess
        save_id=Water
        recruit=Water Wave,Fog
        village_gold=2
    [/side]
    # wmllint: recognize Celestia
    [side]
        side=2
        team_name=Elementals
        user_team_name=_ "Earth Elementals"
        gold=250
        income=20
        controller=ai
        type=Earth Elemental
        canrecruit=yes
        recruit=Rock Pile,Earth Elemental,Fire Wisp,Fire Elemental,Minor Lava Elemental,Lava Elemental
        id=elemleader
    [/side]
    {STARTING_VILLAGES_ALL 2}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 2 "Lava Elemental" 1}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 2 "Minor Lava Elemental" 3}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 2 "Fire Elemental" 2}
    {LIMIT_CONTEMPORANEOUS_RECRUITS 2 "Fire Wisp" 2}

    [event]
        name=prestart
        [recall]
            id=Reana
        [/recall]

        [store_locations]
            terrain=Yww,Ywwf
            variable=orig_water
        [/store_locations]
        {VARIABLE flood_y 30}

        [store_locations]
            x,y=26,17
            [or]
                x,y=0,25
            [/or]
            variable=no_flood
        [/store_locations]

        [store_locations]
            x=9, 3, 22,18,13,20
            y=26,24,24,17,8, 3
            variable=rocks
        [/store_locations]

        {FOREACH rocks i}
            {PLACE_IMAGE "scenery/rubble.png" $rocks[$i].x $rocks[$i].y}
        {NEXT i}
        [store_locations]
            x=1, 8, 25
            y=26,30,18
            variable=destinations
        [/store_locations]
        [store_locations]
            find_in=destinations
            [and]
                x,y=1,1
            [/and]
            variable=depth1_loc
        [/store_locations]
        [store_locations]
            find_in=depth1_loc
            variable=depth2_loc
        [/store_locations]
        [store_locations]
            find_in=depth2_loc
            variable=depth3_loc
        [/store_locations]

        [objectives]
            side=1
            [note]
                description=_"Any non-fog unit may carry one pile of rocks at a time. To drop them, simply move to the targets. Each target takes 4 piles of rocks to dam up."
            [/note]
            [gold_carryover]
                carryover_percentage=40
            [/gold_carryover]
            [objective]
                condition="win"
                description=_ "Flood the cavern"
            [/objective]
            {CELESTIA_DEATH_OBJECTIVES}
            {REANA_DEATH_OBJECTIVES}
            [objective]
                condition="lose"
                description=_ "Enemy unit reaches the southern exit"
            [/objective]
            [objective]
                condition="lose"
                description=_ "Death of the enemy leader"
            [/objective]
        [/objectives]
    [/event]

    [event]
        name=start
        {MSG id=Celestia (_ "Kil'rathacar is right below this cavern. We need to ensure that we do not let any elementals escape to the exit to the south to raise an alarm.")}
        {MSG id=Reana (_ "What is your plan?")}
        {MSG id=Celestia (_ "Below is a deep cavern with magma. If we were to attack now, he would have a distinct advantage. However, if we were to flood the cavern, I could use the water to freeze the ground and cool the magma. This would give us the upper hand and allow us to get to him, past his armies.")}
        {MSG id=Reana (_ "How do you propose we flood the cavern and be able to release it?")}
        {MSG id=Celestia (_ "If we use loose rocks, or the rocks from defeated earth elementals, we can dam up the exits and the river. Also we need to make sure that we do not kill the leader as we need to make sure we have enough of a rock supply.")}
        {FOREACH destinations i}
            {GO_HERE $destinations[$i].x $destinations[$i].y ()}
        {NEXT i}
    [/event]

    [event]
        name=rock picked up
        {MSG speaker=unit (_ "I have some rocks, now we can start blocking up the river and the exits.")}
    [/event]

    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=1
            [not]
                type=Fog,Mist,Frost
            [/not]
            [not]
                [filter_wml]
                    [variables]
                        has_rock=yes
                    [/variables]
                [/filter_wml]
            [/not]
            [filter_location]
                find_in=rocks
            [/filter_location]
        [/filter]
        {REMOVE_IMAGE $x1 $y1}
        [unit_overlay]
            x,y=$x1,$y1
            image="misc/carry-rubble.png"
        [/unit_overlay]
        [store_locations]
            find_in=rocks
            [not]
                x,y=$x1,$y1
            [/not]
            variable=rocks
        [/store_locations]
        {DEBUG "Number of rock locations now: $rocks.length"}
        {VARIABLE unit.variables.has_rock yes}
        [unstore_unit]
            variable=unit
        [/unstore_unit]
        [fire_event]
            name=rock picked up
            [primary_unit]
                id=$unit.id
            [/primary_unit]
        [/fire_event]
    [/event]

    [event]
        name=last breath
        first_time_only=no
        [filter]
            type=Air Elemental,Whirlwind
        [/filter]
        {MSG speaker=second_unit (_ "The messenger has been dealth with.")}
    [/event]

    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=1
            [filter_location]
                find_in=destinations
            [/filter_location]
            [filter_wml]
                [variables]
                    has_rock=yes
                [/variables]
            [/filter_wml]
        [/filter]

        [if]
            [have_location]
                x,y=$x1,$y1
                find_in=depth3_loc
            [/have_location]
            [then]
                {CLEAR_RUBBLE}
                [store_locations]
                    find_in=destinations
                    [not]
                        x,y=$x1,$y1
                    [/not]
                    variable=destinations
                [/store_locations]
                [store_locations]
                    find_in=depth3_loc
                    [not]
                        x,y=$x1,$y1
                    [/not]
                    variable=depth3_loc
                [/store_locations]
                {FIND_NEARBY (
                    [not]
                        terrain=Xu
                    [/not]
                    [not]
                        x,y=$x1,$y1
                    [/not]
                    [not]
                        [filter]
                        [/filter]
                    [/not]
                ) $x1 $y1 5}
                {DEBUG "Moving unit to $nearby_locations[0].x $nearby_locations[0].y"}
                {MOVE_UNIT id=$unit.id $nearby_locations[0].x $nearby_locations[0].y}
                {CLEANUP_SEARCH}
                {REMOVE_IMAGE $x1 $y1}
                [terrain]
                    x,y=$x1,$y1
                    terrain=Xu
                [/terrain]
                {REDRAW_MACRO}
                {MSG id=$unit.id (_ "This exit has been blocked.")}
                {DEBUG "Number of destinations left: $destinations.length. x1: $x1, y1: $y1"}
                {IF_VAR destinations.length equals 0 (
                    [then]
                        {MSG id=Celestia (_ "All the exits are blocked, now we need to kill all of the enemy units to ensure they do not destroy the dams after we leave.")}
                        [fire_event]
                            name=cleanup_rocks
                        [/fire_event]
                        [objectives]
                            side=1
                            [gold_carryover]
                                carryover_percentage=40
                            [/gold_carryover]
                            [objective]
                                condition="win"
                                description=_ "Kill all enemies"
                            [/objective]
                            {CELESTIA_DEATH_OBJECTIVES}
                            {REANA_DEATH_OBJECTIVES}
                        [/objectives]
                    [/then]
                    [else]
                        [if]
                            [variable]
                                name=x1
                                equals=8
                            [/variable]
                            [variable]
                                name=y1
                                equals=30
                            [/variable]
                            [then]
                                {DEBUG "Message should be said"}
                                {MSG id=$unit.id (_ "The river is now blocked, the cavern should start to flood. That should also stop their messengers.")}
                            [/then]
                        [/if]
                    [/else]
                )}
            [/then]
            [else]
                [if]
                    [have_location]
                        x,y=$x1,$y1
                        find_in=depth2_loc
                    [/have_location]
                    [then]
                        {CLEAR_RUBBLE}
                        [store_locations]
                            find_in=depth3_loc
                            [or]
                                x,y=$x1,$y1
                            [/or]
                            variable=depth3_loc
                        [/store_locations]
                        [store_locations]
                            find_in=depth2_loc
                            [not]
                                x,y=$x1,$y1
                            [/not]
                            variable=depth2_loc
                        [/store_locations]
                        {REMOVE_IMAGE $x1 $y1}
                        {PLACE_IMAGE "items/gohere.png" $x1 $y1}
                        {PLACE_IMAGE "scenery/rubble_largest.png" $x1 $y1}
                        {MSG speaker=unit (_ "Almost there, just one more load needed.")}
                    [/then]
                    [else]
                        [if]
                            [have_location]
                                x,y=$x1,$y1
                                find_in=depth1_loc
                            [/have_location]
                            [then]
                                {CLEAR_RUBBLE}
                                [store_locations]
                                    find_in=depth2_loc
                                    [or]
                                        x,y=$x1,$y1
                                    [/or]
                                    variable=depth2_loc
                                [/store_locations]
                                [store_locations]
                                    find_in=depth1_loc
                                    [not]
                                        x,y=$x1,$y1
                                    [/not]
                                    variable=depth1_loc
                                [/store_locations]
                                {REMOVE_IMAGE $x1 $y1}
                                {PLACE_IMAGE "items/gohere.png" $x1 $y1}
                                {PLACE_IMAGE "scenery/rubble_larger.png" $x1 $y1}
                                {MSG speaker=unit (_ "Still needs a couple more loads.")}
                            [/then]
                            [else]
                                {CLEAR_RUBBLE}
                                [store_locations]
                                    find_in=depth1_loc
                                    [or]
                                        x,y=$x1,$y1
                                    [/or]
                                    variable=depth1_loc
                                [/store_locations]
                                {REMOVE_IMAGE $x1 $y1}
                                {PLACE_IMAGE "items/gohere.png" $x1 $y1}
                                {PLACE_IMAGE "scenery/rubble.png" $x1 $y1}
                                {MSG speaker=unit (_ "Rocks deposited, lets bring some more.")}
                            [/else]
                        [/if]
                    [/else]
                [/if]
            [/else]
        [/if]
    [/event]

    [event]
        name=last breath
        first_time_only=no
        [filter]
            side=2
        [/filter]
        [if]
            [have_unit]
                side=2
                count=0
            [/have_unit]
            [variable]
                name=destinations.length
                equals=0
            [/variable]
            [then]
                [endlevel]
                    result=victory
                    {NEW_GOLD_CARRYOVER 40}
                [/endlevel]
            [/then]
        [/if]
    [/event]

    {ON_LAST_BREATH_MSG id=elemleader (_ "Me failed.")}
    [event]
        name=last breath
        [filter]
            id=elemleader
        [/filter]
        {IF_VAR destinations.length not_equals 0 (
            [then]
                {MSG id=Celestia (_"No, we still need him alive!")}
                [endlevel]
                    result=defeat
                [/endlevel]
            [/then]
        )}
    [/event]

    [event]
        name=side 1 turn
        first_time_only=no
        [if]
            [have_location]
                x,y=8,30
                terrain=Xu
            [/have_location]
            [then]
                [if]
                    [have_location]
                        x,y=1,26
                        terrain=Xu
                    [/have_location]
                    [then]
                        [if]
                            [have_location]
                                x,y=25,18
                                terrain=Xu
                            [/have_location]
                            [then]
                                {ROTE_CALL_FUNCTION flood min_y=5}
                            [/then]
                            [else]
                                {ROTE_CALL_FUNCTION flood min_y=17}
                            [/else]
                        [/if]
                    [/then]
                    [else]
                        {ROTE_CALL_FUNCTION flood min_y=25}
                    [/else]
                [/if]
            [/then]
        [/if]
    [/event]

    [event]
        name=flood
        first_time_only=no

        {DEBUG "Flood called. flood_y: $flood_y param.min_y: $param.min_y"}

        {IF_VAR flood_y greater_than $param.min_y (
            [then]
                {VARIABLE stage2 $flood_y} # Stage 2: convert shallow to water
                {VARIABLE_OP stage2 add 1}
                {VARIABLE stage3 $flood_y} # Stage 3: convert orig to deep, wet hills to water
                {VARIABLE_OP stage3 add 2}
                {VARIABLE stage4 $flood_y} # Stage 4: convert all water to deep
                {VARIABLE_OP stage4 add 3}
                {VARIABLE_OP flood_y add -1} # Flood y: convert to shallow

                {DEBUG "Flooding... flood_y: $flood_y stage 2: $stage2 stage3: $stage3, stage4: $stage4"}

                # Stage 1: Convert to shallow
                {IF_VAR flood_y greater_than -1 (
                    [then]
                        {SCROLL_TO 12 $flood_y}
                        {FLOOD_TERRAIN (
                            x=0-26
                            y=$flood_y
                            terrain=Uu
                        ) Ywu}
                        {FLOOD_TERRAIN (
                            x=0-26
                            y=$flood_y
                            terrain=Uu^Uf
                        ) Ywu^Uf}
                        {FLOOD_TERRAIN (
                            x=0-26
                            y=$flood_y
                            [not]
                                find_in=no_flood
                            [/not]
                            terrain=Ur
                        ) Ywur}
                        {FLOOD_TERRAIN (
                            x=0-26
                            y=$flood_y
                            terrain=Uh
                        ) Ywuh}
                        {FLOOD_TERRAIN (
                            x=0-26
                            y=$flood_y
                            terrain=Uu^Vu
                        ) Ywu^Vu}
                        {FLOOD_TERRAIN (
                            x=0-26
                            y=$flood_y
                            terrain=Ywwf
                        ) Yww}
                    [/then]
                )}

                {IF_VAR stage2 greater_than -1 (
                    [then]
                        # Convert shallow to water
                        {FLOOD_TERRAIN (
                            x=0-26
                            y=$stage2
                            terrain=Ywu*,Ywur,Ywu^*
                        ) Yww}
                    [/then]
                )}

                {IF_VAR stage3 greater_than -1 (
                    [then]
                        # Convert original water to deep water
                        {FLOOD_TERRAIN (
                            x=0-26
                            y=$stage3
                            find_in=orig_water
                            terrain=Yww
                        ) Ywo}
                        # Convert submerged hills to water
                        {FLOOD_TERRAIN (
                            x=0-26
                            y=$stage3
                            terrain=Ywuh
                        ) Yww}
                    [/then]
                )}

                {IF_VAR stage4 greater_than -1 (
                    [then]
                        # Convert water to deep water
                        {FLOOD_TERRAIN (
                            x=0-26
                            y=$stage4
                            terrain=Yww
                        ) Ywo}
                    [/then]
                )}

                {CLEAR_VARIABLE stage2}
                {CLEAR_VARIABLE stage3}
                {CLEAR_VARIABLE stage4}
            [/then]
        )}
    [/event]

    [event]
        name=last breath
        first_time_only=no
        [filter]
            [and]
                type=Rock Pile,Earth Elemental,Minor Lava Elemental,Lava Elemental
                [or]
                    [filter_wml]
                        [variables]
                            has_rock=yes
                        [/variables]
                    [/filter_wml]
                [/or]
            [/and]
            [filter_location]
                [not]
                    find_in=rocks
                [/not]
            [/filter_location]
        [/filter]

        {IF_VAR destinations.length greater_than 0 (
            [then]
                {PLACE_IMAGE "scenery/rubble.png" $x1 $y1}
                [store_locations]
                    find_in=rocks
                    [or]
                        x,y=$x1,$y1
                    [/or]
                    variable=rocks
                [/store_locations]
            [/then]
        )}
    [/event]

    [event]
        name=cleanup_rocks
        [store_unit]
            [filter]
                side=1
                [filter_wml]
                    [variables]
                        has_rock=yes
                    [/variables]
                [/filter_wml]
            [/filter]
            variable=tmp_units
        [/store_unit]
        {DEBUG "Need to remove overlay from $tmp_units.length units"}
        {FOREACH tmp_units i}
            {CLEAR_VARIABLE tmp_units[$i].variables.has_rock}
            [unstore_unit]
                variable=tmp_units[$i]
            [/unstore_unit]
            {DEBUG "Cleaning up rock image from unit at $tmp_units[$i].x,$tmp_units[$i].y"}
            [remove_unit_overlay]
                x,y=$tmp_units[$i].x,$tmp_units[$i].y
                image="misc/carry-rubble.png"
            [/remove_unit_overlay]
        {NEXT i}
        {CLEAR_VARIABLE tmp_units}
        {FOREACH rocks i}
            {REMOVE_IMAGE $rocks[$i].x $rocks[$i].y}
        {NEXT i}
        {CLEAR_VARIABLE rocks}
    [/event]

    [event]
        name=victory
        [fire_event]
            name=cleanup_rocks
        [/fire_event]
        {CLEAR_VARIABLE destinations}
        {CLEAR_VARIABLE rocks}
        {CLEAR_VARIABLE depth1_loc}
        {CLEAR_VARIABLE depth2_loc}
        {CLEAR_VARIABLE orig_water}
        {CLEAR_VARIABLE flood_y}
        {CLEAR_VARIABLE no_flood}
    [/event]

    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=2
            x,y=8,30
        [/filter]
        {MSG speaker=unit (_"Will tell Kil'rathacar.")}
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    [event]
        name=side 2 turn end
        first_time_only=no

        # Fix any goto for destinations that have been removed
        [store_unit]
            [filter]
                type=Air Elemental,Whirlwind
            [/filter]
            variable=tmp_air
            kill=no
        [/store_unit]
        {FOREACH tmp_air i}
            [if]
                [variable]
                    name=tmp_air[$i].goto_x
                    greater_than=0
                [/variable]
                [variable]
                    name=destinations.length
                    less_than=1
                [/variable]
                [then]
                    {DEBUG "Removing goto for unit $tmp_air[$i].id"}
                    {VARIABLE tmp_air[$i].goto_x 0}
                    {VARIABLE tmp_air[$i].goto_y 0}
                    [unstore_unit]
                        variable=tmp_air[$i]
                    [/unstore_unit]
                [/then]
            [/if]
        {NEXT i}

        # Create messengers while there are exits un-blocked that have their goto set
        {VARIABLE tmp_turn $turn_number}
        {VARIABLE_OP tmp_turn modulo 5}

        [if]
            [variable]
                name=tmp_air.length
                less_than=1
            [/variable]
            [variable]
                name=tmp_turn
                equals=0
            [/variable]
            [have_location]
                x,y=8,30
                [not]
                    terrain=Xu
                [/not]
            [/have_location]
            [or]
                [variable]
                    name=turn_number
                    equals=2
                [/variable]
            [/or]
            [then]
                {GENERIC_UNIT 2 "Whirlwind" 12 1}
                [+unit]
                    {IS_HERO}
                    goto_x=8
                    goto_y=30
                    moves=0
                [/unit]
                {IF_VAR turn_number equals 2 (
                    [then]
                        {MSG id=elemleader (_ "You, go tell Kil'rathacar that they are here.")}
                        {MSG (
                            x,y=12,1
                            type=Whirlwind
                        ) (_ "Right away")}
                    [/then]
                )}

                {MSG id=Celestia (_ "They have recruited a messenger, make sure it does not reach the exit to the south (river exit)!")}
            [/then]
        [/if]

        {CLEAR_VARIABLE tmp_turn}
        {CLEAR_VARIABLE tmp_air}
    [/event]

    # Test events:
    [event]
        name=show debug options
        first_time_only=no
        [message]
            speaker=narrator
            message=_ "Select a debug option:"
            [option]
                message=_ "Jump to destination"
                [show_if]
                    [variable]
                        name=destinations.length
                        greater_than=0
                    [/variable]
                [/show_if]
                [command]
                    {SCROLL_TO $destinations[0].x $destinations[0].y}
                    {TELEPORT_UNIT id=Reana $destinations[0].x $destinations[0].y}
                    [fire_event]
                        name=moveto
                        [primary_unit]
                            id=Reana
                        [/primary_unit]
                    [/fire_event]
                    {REDRAW_MACRO}
                [/command]
            [/option]
            [option]
                message=_ "Jump to rock"
                [show_if]
                    [variable]
                        name=rocks.length
                        greater_than=0
                    [/variable]
                [/show_if]
                [command]
                    {SCROLL_TO $rocks[0].x $rocks[0].y}
                    {TELEPORT_UNIT id=Reana $rocks[0].x $rocks[0].y}
                    [fire_event]
                        name=moveto
                        [primary_unit]
                            id=Reana
                        [/primary_unit]
                    [/fire_event]
                    {REDRAW_MACRO}
                [/command]
            [/option]
            [option]
                message=_ "Complete dam"
                [show_if]
                    [variable]
                        name=destinations.length
                        greater_than=0
                    [/variable]
                [/show_if]
                [command]
                    {FOREACH destinations i}
                        [terrain]
                            x,y=$destinations[$i].x,$destinations[$i].y
                            terrain=Xu
                        [/terrain]
                        {REMOVE_IMAGE $destinations[$i].x $destinations[$i].y}
                    {NEXT i}
                    [store_locations]
                        find_in=destinations
                        x,y=1,1
                        variable=destinations
                    [/store_locations]
                    [store_locations]
                        find_in=destinations
                        variable=depth1_loc
                    [/store_locations]
                    [store_locations]
                        find_in=depth1_loc
                        variable=depth2_loc
                    [/store_locations]
                [/command]
            [/option]
            [option]
                message=_ "Test flood"
                [show_if]
                    [variable]
                        name=destinations.length
                        equals=0
                    [/variable]
                    [variable]
                        name=flood_y
                        greater_than=0
                    [/variable]
                [/show_if]
                [command]
                    {ROTE_CALL_FUNCTION flood min_y=5}
                [/command]
            [/option]
            [option]
                message=_ "Test flood completely"
                [show_if]
                    [variable]
                        name=destinations.length
                        equals=0
                    [/variable]
                    [variable]
                        name=flood_y
                        greater_than=0
                    [/variable]
                [/show_if]
                [command]
                    [while]
                        [variable]
                            name=flood_y
                            greater_than=5
                        [/variable]
                        [do]
                            {ROTE_CALL_FUNCTION flood min_y=5}
                            [delay]
                                time=500
                            [/delay]
                        [/do]
                    [/while]
                [/command]
            [/option]
            [option]
                message=_ "Clean up rocks"
                [show_if]
                    [variable]
                        name=destinations.length
                        greater_than=0
                    [/variable]
                [/show_if]
                [command]
                    [fire_event]
                        name=cleanup_rocks
                    [/fire_event]
                [/command]
            [/option]
            [option]
                message=_ "Kill enemy leader"
                [command]
                    [kill]
                        id=elemleader
                        fire_event=yes
                    [/kill]
                [/command]
            [/option]
            image=wesnoth-icon.png
        [/message]
    [/event]
[/scenario]
